/* array-means v1.7.0 (GPL-3.0) | André Lichtenthäler | https://github.com/Bikossor/array-means#readme */
"use strict";var arrayMeans=function(){function r(){}return r.a=function(r){return this.arithmetic(r)},r.arithmetic=function(r){if(!Array.isArray(r))throw new Error("Argument is not an array!");return r.reduce(function(r,n){return r+n},0)/r.length},r.q=function(r){return this.quadratic(r)},r.quadratic=function(r){if(!Array.isArray(r))throw new Error("Argument is not an array!");var n=r.reduce(function(r,n){return r+Math.pow(n,2)},0);return Math.sqrt(n/r.length)},r.h=function(r){return this.harmonic(r)},r.harmonic=function(r){if(!Array.isArray(r))throw new Error("Argument is not an array!");var n=r.reduce(function(r,n){return r+1/n},0);return r.length/n},r.g=function(r){return this.geometric(r)},r.geometric=function(r){if(!Array.isArray(r))throw new Error("Argument is not an array!");var n=r.reduce(function(r,n){return r*n});return Math.pow(n,1/r.length)},r.c=function(r){if(!Array.isArray(r))throw new Error("Argument is not an array!");var n=r.reduce(function(r,n){return r+Math.pow(n,3)},0);return Math.pow(n/r.length,1/3)},r.cubic=function(r){if(!Array.isArray(r))throw new Error("Argument is not an array!");var n=r.reduce(function(r,n){return r+Math.pow(n,3)},0);return Math.pow(n/r.length,1/3)},r}();"undefined"!=typeof module&&module.exports&&(module.exports=arrayMeans);